<?php

/**
 * @file
 * leavenotice.module
 * LeaveNotice is intended to set up a site wide exit script to alert users when they are 
 * leaving the site
 */
/**
 * Implements hook_init().
 */

function leavenotice_menu() {
  $items['admin/config/system/leavenotice'] = array(
    'title' => 'Leave Notice Configurator',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('leavenotice_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/leavenotice.admin.inc'
  );
  return $items;
} 

function leavenotice_init() {
  $lib = leavenotice_get_library();
  if ($lib) {
    $container = variable_get('leavenotice_container');
    $sitename =  variable_get('leavenotice_sitename');
    $exit_message = variable_get('leavenotice_exit_message');
    $pre_link_message = variable_get('leavenotice_pre_link_message');
    $new_window = variable_get('leavenotice_new_window');
    $timeout = variable_get('leavenotice_timeout');
    
    $leavenotice_settings = array();
    if($sitename) {
      $leavenotice_settings['siteName'] = $sitename;
    }
    if($exit_message) {
      $leavenotice_settings['exitMessage'] = $exit_message;
    }
    if($pre_link_message) {
      $leavenotice_settings['preLinkMessage'] = $pre_link_message;
    }
    if($new_window) {
      $leavenotice_settings['newWindow'] = $new_window;
    }
    if($timeout) {
      $leavenotice_settings['timeOut'] = $timeout;
    }
    drupal_add_css($lib['css']);
    drupal_add_js($lib['js']);
    drupal_add_js(array('leavenotice' => $leavenotice_settings), 'setting');
    drupal_add_js(drupal_get_path('module', 'leavenotice') . '/js/leavenotice.js');  
  }
}

/**
 * Wrapper to get the library so it works with install profiles.
 */
function leavenotice_get_library() {
  if (function_exists('libraries_get_libraries')) {
    $libraries = libraries_get_libraries();
    if (isset($libraries['leavenotice'])) {
      return array(
        'css' => $libraries['leavenotice'] .'/css/jquery.leaveNotice.css',
        'js' => $libraries['leavenotice'] .'/js/jquery.leaveNotice.min.js'
      );      
    }
  }
}

/**
 * Implements hook_requirements().
 */
function leavenotice_requirements($phase) {
  // Create an array to hold leavenotice requirements
  $requirements = array();

  // Check requirements during the runtime phase
  if ($phase == 'runtime') {
    // Check if the leavenotice jQuery plugin library is installed
    if (($library = libraries_detect('leavenotice')) && !empty($library['installed'])) {
      $requirements['leavenotice_library'] = array(
        'title' => t('leaveNotice jQuery plugin'),
        'value' => t('Installed'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['leavenotice_library'] = array(
        'title' => t('leaveNotice jQuery plugin'),
        'value' => t('Not installed'),
        'description' => $library['error message'],
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}


/**
 * Implements hook_libraries_info()
 */
function leavenotice_libraries_info() {
  $libraries = array();
  $libraries['leavenotice'] = array(
    'name'              => 'leaveNotice',
    'vendor url'        => 'http://rewdy.com/projects/view/leavenotice/',
    'download url'      => 'https://github.com/rewdy/leaveNotice',
    'path'              => 'js',
    'files'   => array(
      'js' => array(
        'jquery.leaveNotice.min.js',
      ),
      'css' => array(
        'jquery.leaveNotice.css',
      )
    ),
  );
  return $libraries;
}
